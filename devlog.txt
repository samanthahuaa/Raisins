Raisins
Samantha Hua
Ruby Friedman
Nada Hameed
pd 7
---------------------
Pokemon (Going?)
A fun game in which the user can catch and battle with pokemon!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
maybe some of these will move into the Obs.Ovrcm section...

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow! oo!...

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we changed having pokedex store rarity value of the pokemon  to having three
separate csv files for the different levels of rarity bc it makes spawning pokemon
of different rarities easier. (we wanted to have different rates of spawning for
the different levels of rarity)

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
||||||||||||||||||||||||||||||||||||||||||



 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================


2022-05-26
--------------------------------------------------------------
Ruby :: Created the propro document, completed the showcase section
Nada :: Worked on propro document, completed the extends section
Samantha :: Created the team flag, completed the Solidify section of the propro
==============================================================

2022-05-30
--------------------------------------------------------------
Ruby :: Explained how TreeNode should have type Pokemon in the cargo. Proposed that
pokedex should just be a csv file that our program would read.
Nada :: Finished the TreeNode.pde file by referencing the TreeNode.java file we had
previously completed in Homeworks 95-97. Explained how a PriorityQueue could be used
in the pokedex so that the easier to catch Pokemon are in the front of the queue and
have "priority."
Samantha :: Brought up how TreeNode's left and right pointers should be of type
TreeNode instead of type Pokemon. Remembered that we had previously read and processed
csv files and pulled up that code as reference.

All :: Discussed, debated and decided that the rarity should be on a 1,2,3 scale
with 3 being the most rare. The alternative was a 0 to 1 scale which allowed for more
variety in the rarity and would be more scalable. Fleshed out the PriorityQueue option
and discussed how it would it would only be similar to the PriorityQueue in its
separation between the group of data. In the execution of our pokedex, we would simply
have a random double to determine which group we would pick a Pokemon from (easy, med, rare)
and another random double to determine which random Pokemon would be selected. Completed
UML diagrams.
==============================================================

2022-05-31 (in class)
--------------------------------------------------------------
Ruby :: Proposed that we should begin creating a visual tutorial instead of focusing
on the functionality of the program. Suggested the sprite should move like PacMan
where once the sprite goes beyond the boundary of the screen, it should reappear
on the other side.
Nada :: Referenced the processing nuggets created by our classmates and learned how
to load an image. Brought up the processing library to see how to resize the image.
Created the v1 (separate from v1 in the visuals and UI)
Samantha :: Noticed the size of the screen was the wrong proportions for the
background image. Found how to find the dimensions of the background image to set
the screen the right size. Showed the group the remove.bg website which can be
used to remove a background of an image.

All :: Selected the trainer sprite we wanted to use. Picked the background image
we wanted to use. Coded the sprite's movement and worked on the boundaries.
==============================================================

2022-05-31 (CSDojo)
--------------------------------------------------------------
Ruby :: added a few urls to pokedex.csv, worked on further incorporating images in the code.
Nada :: came up with the idea of creating a separate object for the user that's
a trainer, without association with the image; saved us from the crisis of using our images.
Samantha :: Reminded the group that the image for the sprite should be saved within
the repo to be referenced in the driver file.

All: Had a mini crisis because all of our files almost vroom vroomed away. We were
able to resolve all issues. We asked our great Dojo Sensei TRT how we could connect
our visuals to our backend code. She very nicely explained to us and helped us develop the idea
that we should have an object of the type we want and separate it from the visuals. This would
allow us to have a sprite moving on screen and a working Trainer object. The
various Trainer methods would be called when the sprite fills certain requirements.
==============================================================

2022-05-31 (At home)
--------------------------------------------------------------
Ruby :: Added functionality so that the up/down/left/right arrow keys also move
the sprite. Used the processing library to find how to connect the program to the
arrow keys. Started experimenting with a tutorial.
Nada :: Started the flowchart in google docs, discussed ease of user experience
and encouraged the group to simplify the flow.
Samantha :: Consulted piazza for new flowchart software and ended up using draw.io
as a group

All :: Worked on flowchart and talked about user experience in the game.
==============================================================

2022-06-1 (In class)
--------------------------------------------------------------
Ruby :: Continued working on the opening tutorial and worked on creating a button
to close and re-open the tutorial. Added additional functionality to the Woo.pde file.
Nada :: Referenced the processing library to create a visual illusion of text
disappearing on the screen. Refined Trainer.pde to make sure it has all of the
functionality that will be used later on. Completed move() method and started
fight() method.
Samantha :: Went to piazza to check what nuggs have been shared with the class.
Found a great post by TAP about buttons in processing and used that code to guide
our development of the tutorial. Added comments to the code to explain what each
component does.
==============================================================

2022-06-01 (CS Dojo)
--------------------------------------------------------------
Ruby :: was unavailable :(
Nada :: proposed the idea of using a tutorial boolean to determine when that
screen would pop up; found some code for parsing a csv file
Samantha :: went back to v1 to fix player movement error, referenced rumpus
room nuggets; worked on v2 in order to get the tutorial screen to pop up; updated
README.md; added TreeNode class to v3, worked on parsing csv file based on previous
lab/hws; diagrammed and coded parsing of csv file

All :: Good senpai TFH at the Dojo helped us fix player movement; closed v1, and
v2 functionality (aside from visual aspects); updated v3 so that it compiles and runs.
Sensei YL provided sage advice regarding certain methods and their return statements. We
believe that we are able to properly parse the csv file and create corresponding Pokemon.
There are still edits to be made, especially when we consider the implementation of trees/
evolution.
==============================================================

2022-06-01 (At home)
--------------------------------------------------------------
Ruby :: Added all of the png files of our Pokemon sprite images into
the csv file and assets folder
Nada :: Created the assets folder in v3. Created test cases for our evolution
tree algo.
Samantha :: Proposed the idea that while reading and parsing through the csv file,
the program should create Pokemon objects to be passed into a TreeNode constructor
so that the TreeNodes will eventually contain Pokemon cargo.

All :: Closed out v2 because we decided the tutorial was finished for now. We will
most likely revisit it later. Planned out how to implement evolutions in our pokedex.
==============================================================

2022-06-02 (in class)
--------------------------------------------------------------
Ruby :: made piazza post with a helpful tidbit regarding processing that could perhaps
save the projects and lives of other thinkeren; created String array of Parent Tokens
Nada :: brought TRF up to speed. contributed to the development of the csv reading
and processing algo.
Samantha :: brought TRF up to speed. diagrammed the parsing of the csv file. created
test cases to trace the evolution tree from csv file data algo.

All :: reviewed the code we have in place for v3 for parsing the csv file, started
implementing evolution into pokedex; discussed modifications to csv to have variables accounting
for number of children and number of evolutions; edited parsing code
==============================================================

2022-06-02 (at home)
--------------------------------------------------------------
Ruby :: Proposed the idea that wallet should be an instance variable within Woo
instead of Trainer. Created the idea that all methods involving a sort of coin
exchange would require the passing through of the value of wallet.
Nada :: Picked out a coin image and added it to the assets folder. Downloaded the
new font and incorporated it into the code.
Samantha :: Brought up scenarios where wallet being in Woo might create problems.
Thought about new ratio for nothing/catch/fight when the player is moving. Proposed
that the ratio should be around 6:3:1

All :: Closed out v3. Picked out a font for our game (Avenir-Book). Implemented
the font and referenced the processing library to learn about how to do so. Created
a coin icon and a wallet tracker that updates with the user's movement.
==============================================================

2022-06-03 (in class)
--------------------------------------------------------------
Ruby :: proposed that there be separate csv files for the different levels of
rarity in Pokemon. Sorted the Pokemon by rarity and created 3 new csv files with
the respective Pokemon
Nada :: had an exciting english guest speaker event and could not attend cs class
womp womp
Samantha :: finished the uml diagrams to show their relationships with one another.
used one of the websites for flowcharts + diagrams suggested in a piazza post (ty TGT)
and updated the instance variables + methods in the diagrams to reflect the
changes in our code
==============================================================

2022-06-04 (at home)
--------------------------------------------------------------
Ruby :: started reading and processing the separate csv files in the Trainer
method. Realized that having an extra blank line in the csv file was the reason
the code kept breaking.
Nada :: was not available to attend
Samantha :: put the uml diagrams into the repo. checked that the flowchart was
up to date (it was). Noticed that the program took a long time to load and
advocated for a prioritization on run time efficiency. Noticed that the images for
the Pokemon weren't loading because there was a space before the url link in the csv
file.

All :: Worked through an error in the process of reading the csv file.
==============================================================

2022-06-05 (at home)
--------------------------------------------------------------
Ruby :: Re-sized every pokemon png image, created a catch screen
and placed the pokemon and player sprite on the ground. Was able to
start encountering pokemon.
Nada :: not available
Samantha :: not available
==============================================================

2022-06-05 (at home)
--------------------------------------------------------------
Ruby :: Brought TNH and TSH up to speed. Worked on curve of ballThrow. Came up
with boolean thrown. Came up with idea of creating a second set of variables for
ballThrow.
Nada :: Found and added pokeball image, created ballThrow() method. Worked
on curve of ballThrow. Implemented thrown variable.
Samantha :: Found a tutorial on the processing library about how to move objects
on a curved line. Brought TNH up to speed.

All :: Followed the tutorial to implement a parabolic curve to the pokeball's
movement. Worked on Catch() method so that it would only happen once. Discussed
whether the pokeball animation should be in Woo or in Trainer
==============================================================

2022-06-05 (at home)
--------------------------------------------------------------
Ruby :: not available
Nada :: not available
Samantha :: Worked out the curve for the pokeball animation. Removed redundant code.
==============================================================

2022-06-06 (in class)
--------------------------------------------------------------
Ruby :: did some math to figure out the curve. pulled up desmos to demonstrate
how the curve shifts should work
Nada :: edited the readme, contributed to the discussion.
Samantha :: brought TRF and TNH up to speed on ball curve. finished UML diagrams
with the correct arrow types.

All :: worked on adjusting exponents/vars to create a parabolic curve, and successfully
did so.
==============================================================

2022-06-06 (at home)
--------------------------------------------------------------
Ruby :: Suggested we remove potions in our game because of time purposes.
Guided TNH through editing the background image for our store
Nada :: Picked out a lil shop image. Edited the dimensions of the background image
for our store.
Samantha :: Brought up the discussion about how the user would exit with the shop
and how we should implement the exit. Came up with the idea to place the items on
the little stools in the store.

All :: We started creating the shop and decided it would be a separate screen where
the user would click on what they wanted to buy to purchase it. Picked out the
location on the screen where our shop would reside.
==============================================================

2022-06-07 (in... another class)
--------------------------------------------------------------
Ruby :: not available
Nada :: added mouseClicked() method to Woo; added functionality so that in
the shop, if the user clicks on the berry, a berry is added to the backpack,
and if they click on the pokeball, a pokeball is added to the backpack. Both also
have their own lil popup screen, but the screen only appears when you click (so
for a brief second)
Samantha :: not available

All ::
==============================================================
TEMPLATE:
2022-06-0
--------------------------------------------------------------
Ruby ::
Nada ::
Samantha ::

All ::
==============================================================
